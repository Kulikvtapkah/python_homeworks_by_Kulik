"""
Задание 5.
1) Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
 Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только числами.
 Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class NotANumberError(Exception):
    def __init__(self, txt):
        self.txt = txt


numbers_list = []
new_item = ''
print('Нужен список чисел. Поехали!')
while new_item != 'stop':
    try:
        new_item = input("Введите целое число (или 'stop' для окончания ввода): ")
        if not (new_item.isdigit() or (new_item[1:].isdigit() and new_item[0] == '-')):
            raise NotANumberError('Не похоже на целое число...')
    except NotANumberError as err:
        if new_item != 'stop':
            print(err)
    else:
        numbers_list.append(int(new_item))
print(f'Вуаля! Ваш новенький список чисел: {numbers_list}')

